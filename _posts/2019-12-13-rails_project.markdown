---
layout: post
title:      "Rails Project"
date:       2019-12-14 01:52:29 +0000
permalink:  rails_project
---


After finishing my Rails project I can even more clearly see the commonalities between Rails and Sinatra, and I really enjoy using the Rails framework. I decided to build a budget app for my project, giving a user capabilities to log transactions and have them interact with the user’s accounts and budgets. The additional controllers I used to get the application flowing were User, Transaction, Account, Budget, and Session. The user and session controllers handled either securely logging in a current user from the database or signing up a new user. I also implemented Omniauth for Facebook to allow my user to sign up for an account with the credentials from their Facebook account. The other controllers were responsible for the CRUD actions for the other models as well as continuing to verify the presence of a logged in user. In my transaction model I added the core method which actually completes the transaction. This method subtracts  the transactions price from the users account balance if possible and returns an error message if unable to make the transaction due to insufficient funds. This method does the same with the budget limit but will still complete the transaction if the budget limit isn't as much as the transaction price. I also  added verification in each of the models to ensure each form would return the correct data needed to persist the instance. With the help of my strong params in my controllers I’m able to manage what data is passed through each model along with my validations. Additional validations are inserted through foreign keys to the database of my accounts, transactions, and budgets. In my routes file I'm able to list my resources nested to give myself new paths for links which I'll use in my views. Through each of the views I'm able to control what info is being displayed to my user and when, using partials to make the code more DRY. Finally I included the use of my helpers to create headings to display at the top of each of my views. This allowed me to clean up my view files more and make the code easier to read. In the end the project came together to mimic a budget app allowing users to do all related actions. 
